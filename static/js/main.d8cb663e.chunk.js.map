{"version":3,"sources":["App.js","index.js"],"names":["App","timeoutId","useState","gameTimeInput","setGameTimeInput","gameTime","setGameTime","text","setText","wordCount","setWordCount","timeLeft","setTimeLeft","isGameStarted","setIsGameStarted","textareaRef","useRef","buttonText","timeSpanStyle","handleChange","e","target","name","value","useEffect","current","focus","setTimeout","prevTime","split","filter","word","length","disabled","onChange","type","onClick","ref","placeholder","style","color","clearTimeout","ReactDOM","render","document","getElementById"],"mappings":"iKAiGeA,MA/Ff,WAAgB,IAYVC,EAZS,EAC6BC,mBAAS,IADtC,mBACNC,EADM,KACSC,EADT,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGWJ,mBAAS,IAHpB,mBAGNK,EAHM,KAGAC,EAHA,OAIqBN,mBAAS,GAJ9B,mBAINO,EAJM,KAIKC,EAJL,OAKmBR,mBAASG,GAL5B,mBAKNM,EALM,KAKIC,EALJ,OAM6BV,oBAAS,GANtC,mBAMNW,EANM,KAMSC,EANT,KAOPC,EAAcC,iBAAO,MAErBC,EAAaJ,EAAgB,QAAU,QACvCK,EACJP,EAAW,EAAI,QAAUA,GAAY,GAAKA,GAAY,EAAI,SAAW,MAsCvE,SAASQ,EAAaC,GAAI,IAAD,EACCA,EAAEC,OAAlBC,EADe,EACfA,KAAMC,EADS,EACTA,MACL,SAATD,EAAkBd,EAAQe,GAASnB,EAAiBmB,GAEtD,OArBAC,qBAAU,WACJnB,EAAW,GAAGO,EAAYP,KAC7B,CAACA,IAEJmB,qBAAU,WACJb,EAAW,GAAKE,IAClBE,EAAYU,QAAQC,QACpBzB,EAAY0B,YAAW,WACrBf,GAAY,SAACgB,GAAD,OAAcA,EAAW,OACpC,MAEY,IAAbjB,IACFD,EAAwBH,EA7BTsB,MAAM,KAAKC,QAAO,SAACC,GAAD,MAAmB,KAATA,KAAaC,QA8BxDjB,EAAYU,QAAQQ,UAAW,KAEhC,CAACtB,EAAUE,IAOZ,6BACE,gCACE,0CAEF,4BACG,KADH,yBAC+B,MAE/B,iCACE,iEACA,2BACEoB,SAAUpB,EACVU,MAAOpB,EACP+B,SAAUf,EACVgB,KAAK,SACLb,KAAK,kBAEP,4BAAQW,SAAUpB,EAAeuB,QA3CvC,WACE9B,EAAYH,GACZC,EAAiB,MAyCb,cAKF,8BACEiC,IAAKtB,EACLO,KAAK,OACLC,MAAOhB,EACP2B,SAAUf,EACVc,UAAWpB,EACXyB,YAAY,mCAEd,0CACa,0BAAMC,MAAO,CAAEC,MAAOtB,IAAkBP,GAAiB,IADtE,WAIA,4BAAQyB,QArEZ,WACE,IAAKvB,EAAe,OAAOC,GAAiB,GAC5C2B,aAAaxC,GACba,GAAiB,GACjBF,EAAYP,GACZG,EAAQ,IACRE,EAAa,KA+DqBO,GAChC,2CACc,8BAAOR,M,KCtF3BiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d8cb663e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction App() {\r\n  const [gameTimeInput, setGameTimeInput] = useState(\"\");\r\n  const [gameTime, setGameTime] = useState(10);\r\n  const [text, setText] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(gameTime);\r\n  const [isGameStarted, setIsGameStarted] = useState(false);\r\n  const textareaRef = useRef(null);\r\n\r\n  const buttonText = isGameStarted ? \"reset\" : \"start\";\r\n  const timeSpanStyle =\r\n    timeLeft > 3 ? \"green\" : timeLeft >= 1 && timeLeft <= 3 ? \"yellow\" : \"red\";\r\n  let timeoutId;\r\n\r\n  function countWords(stateText) {\r\n    return stateText.split(\" \").filter((word) => word !== \"\").length;\r\n  }\r\n\r\n  function startEndGame() {\r\n    if (!isGameStarted) return setIsGameStarted(true);\r\n    clearTimeout(timeoutId);\r\n    setIsGameStarted(false);\r\n    setTimeLeft(gameTime);\r\n    setText(\"\");\r\n    setWordCount(0);\r\n  }\r\n\r\n  function handleGameTime() {\r\n    setGameTime(gameTimeInput);\r\n    setGameTimeInput(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (gameTime > 1) setTimeLeft(gameTime);\r\n  }, [gameTime]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft > 0 && isGameStarted) {\r\n      textareaRef.current.focus();\r\n      timeoutId = setTimeout(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    }\r\n    if (timeLeft === 0) {\r\n      setWordCount(countWords(text));\r\n      textareaRef.current.disabled = true;\r\n    }\r\n  }, [timeLeft, isGameStarted]);\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    name === \"text\" ? setText(value) : setGameTimeInput(value);\r\n  }\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>TypeSpeed</h1>\r\n      </header>\r\n      <h2>\r\n        {\">>\"}Test your typing speed{\"<<\"}\r\n      </h2>\r\n      <section>\r\n        <label>How long should the game last?</label>\r\n        <input\r\n          disabled={isGameStarted}\r\n          value={gameTimeInput}\r\n          onChange={handleChange}\r\n          type=\"number\"\r\n          name=\"gameTimeInput\"\r\n        />\r\n        <button disabled={isGameStarted} onClick={handleGameTime}>\r\n          Set Timer\r\n        </button>\r\n      </section>\r\n\r\n      <textarea\r\n        ref={textareaRef}\r\n        name=\"text\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        disabled={!isGameStarted}\r\n        placeholder=\"How many words can you get in?\"\r\n      />\r\n      <h3>\r\n        Time left: <span style={{ color: timeSpanStyle }}>{timeLeft}</span>{\" \"}\r\n        seconds\r\n      </h3>\r\n      <button onClick={startEndGame}>{buttonText}</button>\r\n      <h3>\r\n        Word count: <span>{wordCount}</span>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}